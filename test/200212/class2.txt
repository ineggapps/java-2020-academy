■ 자바 테스트

오류인 경우 컴파일 오류인지 런타임 오류 인지와 이유를 간단히 기술하세요

1] 실행 결과는 ?
class Test {
    int x = 12;
    public void method(int a) {
        a+=x;
    }
}

public class Ex {
    public static void main(String[] args) {
        Test t = new Test();
        int a=10;
        t.method(a);
        System.out.println(a);
    }
}

답:10
기본자료형은 값 자체를 넘기므로 main메서드 안에 선언된 지역변수 a는
t.method(a)를 호출하여도 a값은 보존된다.
따라서 a=10으로 초기화하여 선언하였으므로 10이 출력된다.


2] 실행 결과는 ?
class Test {
    int x = 12;
    public void method(Test tt) {
        tt.x+=10;
     }
}

public class Ex {
    public static void main(String[] args) {
        Test t = new Test();
        t.method(t);
        System.out.println(t.x);
    }
}

답:22
참조변수 t는 객체의 주솟값을 넘긴다.
따라서 주솟값을 참조하여 객체의 x값을 참조할 것이고
x의 변숫값에 10을 더한 결괏값인 22를 저장하게 된다.
궁극적으로 System.out.println(t.x)에서는 22가 된다.


3] 실행 결과는 ?
class Test {
    public void method(int[] x) {
         int n=2;
         for(int i=0; i<x.length; i++) {
             x[i]=n;
             n+=2;
         }
     }
}

public class Ex {
    public static void main(String[] args) {
        Test t = new Test();
        int[] a={1,3,5,7,9};
        t.method(a);
        System.out.println(a[2]);
    }
}

답: 6
{1,3,5,7,9}배열객체 주솟값을 넘겼는데,
이 배열객체 주솟값에 짝수를 순차적으로 대입하였다.
따라서 a의 배열객체 주솟값에는 {2,4,6,8,10}이 저장되어 있는 상태이다.

4] 실행 결과는 ?
class Test {
    public void method(int[] x) {
         int n=2;
         x=new int[5];
         for(int i=0; i<x.length; i++) {
             x[i]=n;
             n+=2;
         }
     }
}

public class Ex {
    public static void main(String[] args) {
        Test t = new Test();
        int[] a=null;
        t.method(a);
        System.out.println(a[2]);
    }
}

답:런타임 오류
method(~)는 반환형이 void이다. 따라서 아무것도 반환하지 않으므로 a값에는 변화가 없다.
그런데 객체주솟값에 아무것도 들어있지 않는데 a[2]를 출력하라고 했다.
NullPointerException 런타임 오류가 발생한다.

5] 다음에서
1. public class A {
2.     public void test() {
3.     }
4.     public String test() {
5.        return "a";
6.     }
7.     public double test(int x) {
8        return 1.0;
9.     }
10. }

  올바른 것은 ?

  가. 런 타임 오류
  나. 7번 라인으로 인하여 컴파일 오류
  다. 4번 라인으로 인하여 컴파일 오류
  라. 런 타임 및 컴파일 오류가 없다.


6] 다음 실행 결과는 ?
public class Test {
    int a=81;
    void go() {
      incr(++a);
      System.out.println(a);
    }
    void incr(int a) {
        a+=10;
    }
    public static void main(String[] args) {
        new Test().go();
    }
}

답: 82
incr(++a)는 incr(82)메서드를 호출한다는 의미이고 a=82가 되었다.
하지만 incr의 매개변수는 받는 자룟값이 int형이므로 기본자료형에 속한다.
기본자료형은 매개변수를 넘길 때 값 자체만을 전달하므로 incr 메서드 내에서 가공된 데이터는
void go()메서드에서 보낸 a변수에 영향을 미치지 못한다.
따라서 결괏값은 82를 반환한다.

7] 실행 결과는 ?
public class Test {
   public void go(Long n) {    
       System.out.println("Long");
   }
   public void go(Short n) {
       System.out.println("Short");
   }
   public void go(int n) {
       System.out.println("int");
   }
   public static void main(String[] args) {
      Test oo=new Test();
      short y = 6;
      long z = 7;
      oo.go(y);
      oo.go(z);
   }
}


8] 실행결과는 ?
class QQ {
    private int age = 12;
    private String name;
    public void print() {
       System.out.println(name+":"+age);
     }
}

class Test {
    private QQ t;
    public void sub() {
       t.print();
     }
}

public class Ex {
    public static void main(String[] args) {
        Test tt = new Test();
        tt.sub();
    }
}


9] 실행결과는 ?
class QQ {
    private int age = 12;
    private String name;
    public void print() {
       System.out.println(name+":"+age);
     }
}

class Test {
    private QQ t;
    public void sub() {
       t=new QQ();
       t.print();
     }
}

public class Ex {
    public static void main(String[] args) {
        Test tt = new Test();
        tt.sub();
    }
}


10] 실행결과는 ?
class Test {
    private int age = 12;
    private String name;
    public Test(String n) {
        name=n;
    }
    public void print() {
       System.out.println(name+":"+age);
     }
}

public class Ex {
    public static void main(String[] args) {
        Test tt = new Test();
        tt.print();
    }
}


11] 실행결과는 ?
class Test {
    private int age = 12;
    private String name;
    public void Test() {
        name="스프링";
    }
    public void print() {
       System.out.println(name+":"+age);
     }
}

public class Ex {
    public static void main(String[] args) {
        Test tt = new Test();
        tt.print();
    }
}


12] 실행결과는 ?
class Test {
    private int age = 12;
    private String name;
    public Test() {
    }
    public Test(String n) {
        name=n;
    }
    public void print() {
       System.out.println(name+":"+age);
     }
}

public class Ex {
    public static void main(String[] args) {
        String n="스프링";
        Test tt = new Test();
        tt.print();
    }
}


13] 실행결과는 ?
class Test {
    private int age = 12;
    private String name;
    private Test() {
        name="자바";
    }
    public void print() {
       System.out.println(name+":"+age);
     }
}

public class Ex {
    public static void main(String[] args) {
        Test tt = new Test();
        tt.print();
    }
}