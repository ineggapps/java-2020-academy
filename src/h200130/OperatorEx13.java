package h200130;

public class OperatorEx13 {
	public static void main(String[] args) {
		char c1 = 'a';//문자형 변수 c1을 선언하여 문잣값 'a'를 대입하였다.
//		char c2= c1+1; //오류 발생: 문자형 변수 c2를 선언하고 문잣값 c1('a')에 1을 더한 결괏값을 대입한다.
		/*
		 * 이때,
		 * char은 기본적으로 연산을 위한 변수 타입이 아니기 때문에 char형 변수와 정수형 리터럴과 연산을 시도할 경우 오류가 발생한다.
		 * 굳이 c1 변숫값을 이용하여 연산을 하고 싶으면 (int)c1+1; 과 같이 강제 형 변환을 시도하여 연산을 시도하면 된다.
		 * 연산을 시도하여 얻은 결괏값은 당연히 int 정수형 결괏값이 반환된 98이 반환된다.
		 * 	System.out.println((int)c1+1);
		 * */
		char c2 = 'a'+1;
		/*
		 * 위의 구문에서는 분명 문잣값이 왔지만 오류가 나지 않고 정상적으로 실행된다.
		 * char형 리터럴 값은 컴파일러가 자동으로 int형으로 변환하여 연산을 수행하기 때문에 오류가 없이 연산이 수행되어 98이라는 값이 반환된다.
		 * c2라는 char형 변수에 저장될 때는 타입에 맞게 98이라는 값에 대응하는 아스키 코드 값인 'b'값이 저장된다.
		 * cf) c2 = c1++; 구문 역시 c2는 b값이 저장된다 (단, 해당 구문 다음줄부터는 c1의 값도 마찬가지로 b값으로 변경되는 것에 유의)
		 * */
		System.out.println(c2);//b가 출력된다.
	}
}
